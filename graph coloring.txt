#include <iostream>
using namespace std;
#define v 4
int color[v]={0};

void graphcoloring(int graph[v][v],int tot_color,int node){
    if(node==v){
        for(int i=0;i<v;i++){
        cout<<color[i]<<" ";
    }
    cout<<endl;
    return;
    }
    //for testing all colors on a node
    for(int i=1;i<=tot_color;i++){
        bool safe=1;
        //testing one color on node -- i color on this node
        for(int j=0;j<v;j++){
            if(graph[node][j] && i==color[j]){
                safe=0;
                break;
            }
        }
        if(safe){
            color[node]=i;
            graphcoloring(graph,tot_color,node+1);
            color[node]=0; //agar backtrack ho jaye toh
        }
    }
}

int main()
{
    /* Create following graph and test
       whether it is 3 colorable
      (3)---(2)
       |   / |
       |  /  |
       | /   |
      (0)---(1)
    */
    int graph[v][v] = {
        { 0, 1, 1, 1 },
        { 1, 0, 1, 0 },
        { 1, 1, 0, 1 },
        { 1, 0, 1, 0 },
    };
    int tot_color = 3;
    int curr_node=0;
    graphcoloring(graph, tot_color, curr_node);
    return 0;
}