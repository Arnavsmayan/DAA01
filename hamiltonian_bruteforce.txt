#include <iostream>
#include <algorithm>
using namespace std;
#define v 4
int valid_permutation(int graph[v][v],int p[v]){
    for(int i=0;i<v-1;i++){
        if(graph[p[i]][p[i+1]]==0)
        return 0;
    }
    return 1;
}

void find_graph(int graph[v][v],int p[v]){
    
    if(valid_permutation(graph,p)){
        for(int i=0;i<v;i++){
            cout<<p[i]<<" ";
        }
        cout<<endl;
    }else{
        next_permutation(p,p+v);
        if(p[0]==0 && p[1]==1 && p[2]==2)
        return;
        find_graph(graph,p);
    }
}


int main() {
    int graph[v][v]={
        {1,0,1,0},
        {0,1,1,0},
        {0,0,1,1},
        {1,0,0,1}
    };
    int p[v]={0,1,2,3};
    find_graph(graph,p);
    

    return 0;
}